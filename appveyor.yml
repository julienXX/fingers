environment:
  global:
    RUST_VERSION: stable
    CRATE_NAME: fingers

  matrix:
    # MinGW
    - TARGET: i686-pc-windows-gnu
      ARCH: i686
      MPATH: C:\msys64\mingw32
    - TARGET: x86_64-pc-windows-gnu
      ARCH: x86_64
      MPATH: C:\msys64\mingw64

install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - C:\msys64\usr\bin\pacman -S --noconfirm mingw-w64-%ARCH%-openssl
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - set OPENSSL_DIR=%MPATH%\lib
  - rustc -Vv
  - cargo -V

test_script:
  # we don't run the "test phase" when doing deploys
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo build --target %TARGET% &&
      cargo build --target %TARGET% --release &&
      cargo test --target %TARGET% &&
      cargo test --target %TARGET% --release &&
      cargo run --target %TARGET% &&
      cargo run --target %TARGET% --release
    )

before_deploy:
  - cargo rustc --target %TARGET% --release --bin fingers -- -C lto
  - ps: ci\before_deploy.ps1

deploy:
  artifact: /.*\.zip/
  auth_token:
    secure: IMIlNnNBZwe5/NBK9VQfZnOzaZWvdR/Dnhl+aMFtkYD7qntX57VTHS+D/lsPGiV/
  description: ''
  on:
    RUST_VERSION: stable
    appveyor_repo_tag: true
  provider: GitHub

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

notifications:
  - provider: Email
    on_build_success: false

# disable automatic builds
build: false
